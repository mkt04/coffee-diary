-# TODO::専用のCSSを作って管理したい。FLOCSSだと「p-先頭の日記」のイメージ。デザインを詰める際に検討
- image_size = size == "large" ? "large" : "medium"

.ui.unstackable.items
  .item
    .content
      / 日付
      %span.header= article.date
    .content
      / 豆・ブレンドの名前
      %span.header= article.bean_name
    .content
      -# TODO::非同期で更新・削除させたい。更新削除後は画面遷移せずに画面に反映させたい
      %span
        = link_to edit_article_path(article) do
          %i.edit.icon
          編集
      %span
        = link_to article, method: :delete, data: { confirm: '日記を削除しますか？' } do
          %i.trash.alternate.outline.icon
          削除

  .item
    .ui.image{class: image_size}
      - if photo = article.photos.first.presence
        = image_tag photo.variant(resize_to_limit: [100, 100])
      - else
        %img{src: asset_pack_path("media/images/no_image.png")}
    .content
      / 店名
      .description
        %p= article.shop_name
      / 産地
      .description
        %p= article.producing_area
      / 挽き方
      .description
        %p= article.particle_size
      / リピート
      .description
        %p= article.want_to_again
      / フレーバー
      .extra
        -# TODO::articleにフレーバーをリレーションで持たせる。フレーバーを全て並べて評させる
        .ui.teal.label ワイニー
        .ui.teal.label フルボディ
      / メモ
      .description
        %p= article.memo
